# Makefile.in generated by automake 1.10.2 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# -*- Mode: Makefile -*-
#
# Makefile.am - automake file for Raptor libraptor
#
# Copyright (C) 2000-2009, David Beckett http://www.dajobe.org/
# Copyright (C) 2000-2005, University of Bristol, UK http://www.bristol.ac.uk/
# 
# This package is Free Software and part of Redland http://librdf.org/
# 
# It is licensed under the following three licenses as alternatives:
#   1. GNU Lesser General Public License (LGPL) V2.1 or any newer version
#   2. GNU General Public License (GPL) V2 or any newer version
#   3. Apache License, V2.0 or any newer version
# 
# You may not use this file except in compliance with at least one of
# the above three licenses.
# 
# See LICENSE.html or LICENSE.txt at the top of this package for the
# complete terms and further detail along with the license texts for
# the licenses in COPYING.LIB, COPYING and LICENSE-2.0.txt respectively.
# 
# 




pkgdatadir = $(datadir)/raptor
pkglibdir = $(libdir)/raptor
pkgincludedir = $(includedir)/raptor
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
am__append_1 = raptor_set_test raptor_xml_test
#am__append_2 = raptor_libxml.c
am__append_3 = raptor_expat.c
am__append_4 = raptor_rdfxml.c raptor_sax2.c
am__append_5 = turtle_lexer.c turtle_lexer.h turtle_parser.c turtle_parser.h turtle_common.h
#am__append_6 = turtle_lexer.c turtle_lexer.h turtle_parser.c turtle_parser.h turtle_common.h
#am__append_7 = n3_lexer.c n3_lexer.h n3_parser.c n3_parser.h n3_common.h
am__append_8 = ntriples_parse.c
am__append_9 = raptor_rss_common.c raptor_rss.h
am__append_10 = raptor_rss.c
#am__append_11 = raptor_grddl.c
am__append_12 = raptor_guess.c
am__append_13 = raptor_librdfa.c
am__append_14 = raptor_serialize_rdfxml.c
am__append_15 = raptor_serialize_ntriples.c

#raptor_abbrev.c required by both turtle and xml-abbrev
am__append_16 = raptor_abbrev.c
#am__append_17 = raptor_abbrev.c
am__append_18 = raptor_serialize_rdfxmla.c
am__append_19 = raptor_serialize_turtle.c
am__append_20 = raptor_serialize_rss.c
am__append_21 = raptor_serialize_dot.c
am__append_22 = raptor_serialize_json.c
am__append_23 = raptor_nfc_data.c raptor_nfc.c raptor_nfc.h
am__append_24 = strcasecmp.c
am__append_25 = parsedate.c
am__append_26 = \
$(top_srcdir)/librdfa/curie.c \
$(top_srcdir)/librdfa/language.c\
$(top_srcdir)/librdfa/rdfa.c \
$(top_srcdir)/librdfa/rdfa_utils.c \
$(top_srcdir)/librdfa/subject.c \
$(top_srcdir)/librdfa/triple.c \
$(top_srcdir)/librdfa/rdfa.h \
$(top_srcdir)/librdfa/rdfa_utils.h 

am__append_27 = -DLIBRDFA_IN_RAPTOR -I$(top_srcdir)/librdfa
subdir = src
DIST_COMMON = $(include_HEADERS) $(noinst_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/raptor-config.in $(srcdir)/raptor_config.h.in \
	raptor_www_curl.c raptor_www_libfetch.c raptor_www_libxml.c
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = raptor_config.h
CONFIG_CLEAN_FILES = raptor-config
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(man1dir)" "$(DESTDIR)$(includedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libraptor_la_DEPENDENCIES = 
am__libraptor_la_SOURCES_DIST = raptor_parse.c raptor_serialize.c \
	raptor_rfc2396.c raptor_uri.c raptor_locator.c \
	raptor_namespace.c raptor_qname.c raptor_feature.c \
	raptor_general.c raptor_utf8.c raptor_www.c \
	raptor_identifier.c raptor_statement.c raptor_sequence.c \
	raptor_stringbuffer.c raptor_iostream.c raptor_xml.c \
	raptor_xml_writer.c raptor_set.c turtle_common.c \
	raptor_turtle_writer.c raptor_xsd.c raptor_avltree.c \
	snprintf.c raptor_json_writer.c raptor_memstr.c \
	raptor_libxml.c raptor_expat.c raptor_rdfxml.c raptor_sax2.c \
	turtle_lexer.c turtle_lexer.h turtle_parser.c turtle_parser.h \
	turtle_common.h n3_lexer.c n3_lexer.h n3_parser.c n3_parser.h \
	n3_common.h ntriples_parse.c raptor_rss_common.c raptor_rss.h \
	raptor_rss.c raptor_grddl.c raptor_guess.c raptor_librdfa.c \
	raptor_serialize_simple.c raptor_serialize_rdfxml.c \
	raptor_serialize_ntriples.c raptor_abbrev.c \
	raptor_serialize_rdfxmla.c raptor_serialize_turtle.c \
	raptor_serialize_rss.c raptor_serialize_dot.c \
	raptor_serialize_json.c raptor_nfc_data.c raptor_nfc.c \
	raptor_nfc.h strcasecmp.c parsedate.c \
	$(top_srcdir)/librdfa/curie.c $(top_srcdir)/librdfa/language.c \
	$(top_srcdir)/librdfa/rdfa.c \
	$(top_srcdir)/librdfa/rdfa_utils.c \
	$(top_srcdir)/librdfa/subject.c $(top_srcdir)/librdfa/triple.c \
	$(top_srcdir)/librdfa/rdfa.h \
	$(top_srcdir)/librdfa/rdfa_utils.h
#am__objects_1 = raptor_libxml.lo
am__objects_2 = raptor_expat.lo
am__objects_3 = raptor_rdfxml.lo \
	raptor_sax2.lo
am__objects_4 = turtle_lexer.lo \
	turtle_parser.lo
#am__objects_5 = turtle_lexer.lo \
#	turtle_parser.lo
#am__objects_6 = n3_lexer.lo n3_parser.lo
am__objects_7 = ntriples_parse.lo
am__objects_8 = raptor_rss_common.lo
am__objects_9 = raptor_rss.lo
#am__objects_10 = raptor_grddl.lo
am__objects_11 = raptor_guess.lo
am__objects_12 = raptor_librdfa.lo
am__objects_13 =  \
	raptor_serialize_rdfxml.lo
am__objects_14 =  \
	raptor_serialize_ntriples.lo
am__objects_15 =  \
	raptor_abbrev.lo
#am__objects_16 = raptor_abbrev.lo
am__objects_17 = raptor_serialize_rdfxmla.lo
am__objects_18 =  \
	raptor_serialize_turtle.lo
am__objects_19 =  \
	raptor_serialize_rss.lo
am__objects_20 = raptor_serialize_dot.lo
am__objects_21 =  \
	raptor_serialize_json.lo
am__objects_22 = raptor_nfc_data.lo \
	raptor_nfc.lo
am__objects_23 = strcasecmp.lo
am__objects_24 = parsedate.lo
am__objects_25 = curie.lo language.lo rdfa.lo \
	rdfa_utils.lo subject.lo triple.lo
am_libraptor_la_OBJECTS = raptor_parse.lo raptor_serialize.lo \
	raptor_rfc2396.lo raptor_uri.lo raptor_locator.lo \
	raptor_namespace.lo raptor_qname.lo raptor_feature.lo \
	raptor_general.lo raptor_utf8.lo raptor_www.lo \
	raptor_identifier.lo raptor_statement.lo raptor_sequence.lo \
	raptor_stringbuffer.lo raptor_iostream.lo raptor_xml.lo \
	raptor_xml_writer.lo raptor_set.lo turtle_common.lo \
	raptor_turtle_writer.lo raptor_xsd.lo raptor_avltree.lo \
	snprintf.lo raptor_json_writer.lo raptor_memstr.lo \
	$(am__objects_1) $(am__objects_2) $(am__objects_3) \
	$(am__objects_4) $(am__objects_5) $(am__objects_6) \
	$(am__objects_7) $(am__objects_8) $(am__objects_9) \
	$(am__objects_10) $(am__objects_11) $(am__objects_12) \
	raptor_serialize_simple.lo $(am__objects_13) $(am__objects_14) \
	$(am__objects_15) $(am__objects_16) $(am__objects_17) \
	$(am__objects_18) $(am__objects_19) $(am__objects_20) \
	$(am__objects_21) $(am__objects_22) $(am__objects_23) \
	$(am__objects_24) $(am__objects_25)
libraptor_la_OBJECTS = $(am_libraptor_la_OBJECTS)
libraptor_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libraptor_la_LDFLAGS) $(LDFLAGS) -o $@
binSCRIPT_INSTALL = $(INSTALL_SCRIPT)
SCRIPTS = $(bin_SCRIPTS)
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libraptor_la_SOURCES)
DIST_SOURCES = $(am__libraptor_la_SOURCES_DIST)
man1dir = $(mandir)/man1
NROFF = nroff
MANS = $(man_MANS)
includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(include_HEADERS) $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/ariana/workspace/enisi/hpylori_compartments/deps/src/project_copasi_deps/src/raptor/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/ariana/workspace/enisi/hpylori_compartments/deps/src/project_copasi_deps/src/raptor/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/ariana/workspace/enisi/hpylori_compartments/deps/src/project_copasi_deps/src/raptor/missing --run autoconf
AUTOHEADER = ${SHELL} /home/ariana/workspace/enisi/hpylori_compartments/deps/src/project_copasi_deps/src/raptor/missing --run autoheader
AUTOMAKE = ${SHELL} /home/ariana/workspace/enisi/hpylori_compartments/deps/src/project_copasi_deps/src/raptor/missing --run automake-1.10
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS =   -I/home/ariana/workspace/enisi/hpylori_compartments/deps/src/project_copasi_deps/bin/include
CPP = gcc -E
CPPFLAGS = -DRAPTOR_INTERNAL=1 -DRAPTOR_V2_EXPERIMENTAL=1 
CURL_CONFIG = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
GTKDOC_CHECK = 
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS =   -L/home/ariana/workspace/enisi/hpylori_compartments/deps/src/project_copasi_deps/bin/lib
LEX = :
LEXLIB = 
LEX_OUTPUT_ROOT = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /home/ariana/workspace/enisi/hpylori_compartments/deps/src/project_copasi_deps/src/raptor/missing --run makeinfo

# Memory debugging
MEM = 
MEM_LIBS = 
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = raptor
PACKAGE_BUGREPORT = http://bugs.librdf.org/
PACKAGE_NAME = Raptor RDF Parser
PACKAGE_STRING = Raptor RDF Parser 1.4.19
PACKAGE_TARNAME = raptor
PACKAGE_VERSION = 1.4.19
PATH_SEPARATOR = :
PERL = perl
PKG_CONFIG = /usr/bin/pkg-config
RANLIB = ranlib
RAPTOR_LDFLAGS =  -lm -lexpat
RAPTOR_LIBTOOLLIBS = libraptor.la
RAPTOR_LIBTOOL_VERSION = 3:0:2
RAPTOR_PARSERS =  rdfxml ntriples turtle trig guess rss-tag-soup rdfa
RAPTOR_SERIALIZERS =  rdfxml rdfxml-abbrev turtle ntriples rss-1.0 dot json atom
RAPTOR_VERSION_DECIMAL = 10419
RAPTOR_WWW_LIBRARY = none
RAPTOR_XML_PARSER = expat
RPM_RELEASE = SNAP
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
TAR = tar
VERSION = 1.4.19
XML_CONFIG = 
XSLT_CONFIG = 
YACC = yacc
YFLAGS = 
abs_builddir = /home/ariana/workspace/enisi/hpylori_compartments/deps/src/project_copasi_deps/src/raptor/src
abs_srcdir = /home/ariana/workspace/enisi/hpylori_compartments/deps/src/project_copasi_deps/src/raptor/src
abs_top_builddir = /home/ariana/workspace/enisi/hpylori_compartments/deps/src/project_copasi_deps/src/raptor
abs_top_srcdir = /home/ariana/workspace/enisi/hpylori_compartments/deps/src/project_copasi_deps/src/raptor
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/ariana/workspace/enisi/hpylori_compartments/deps/src/project_copasi_deps/src/raptor/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/ariana/workspace/enisi/hpylori_compartments/deps/src/project_copasi_deps/bin
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
bin_SCRIPTS = raptor-config
lib_LTLIBRARIES = libraptor.la
include_HEADERS = raptor.h
noinst_HEADERS = raptor_internal.h win32_raptor_config.h
man_MANS = raptor-config.1
TESTS = raptor_parse_test raptor_rfc2396_test raptor_uri_test \
	raptor_namespace_test strcasecmp_test raptor_www_test \
	raptor_sequence_test raptor_stringbuffer_test \
	raptor_uri_win32_test raptor_iostream_test \
	raptor_xml_writer_test raptor_turtle_writer_test \
	raptor_avltree_test $(am__append_1)
CLEANFILES = $(TESTS) \
turtle_lexer_test turtle_parser_test \
n3_lexer_test n3_parser_test \
rdfdiff

MAINTAINERCLEANFILES = turtle_lexer.c turtle_lexer.h \
turtle_parser.c turtle_parser.h turtle_parser.output \
n3_lexer.c n3_lexer.h \
n3_parser.c n3_parser.h n3_parser.output

AM_CPPFLAGS = $(MEM) $(am__append_27)
# Always available
libraptor_la_SOURCES = raptor_parse.c raptor_serialize.c \
	raptor_rfc2396.c raptor_uri.c raptor_locator.c \
	raptor_namespace.c raptor_qname.c raptor_feature.c \
	raptor_general.c raptor_utf8.c raptor_www.c \
	raptor_identifier.c raptor_statement.c raptor_sequence.c \
	raptor_stringbuffer.c raptor_iostream.c raptor_xml.c \
	raptor_xml_writer.c raptor_set.c turtle_common.c \
	raptor_turtle_writer.c raptor_xsd.c raptor_avltree.c \
	snprintf.c raptor_json_writer.c raptor_memstr.c \
	$(am__append_2) $(am__append_3) $(am__append_4) \
	$(am__append_5) $(am__append_6) $(am__append_7) \
	$(am__append_8) $(am__append_9) $(am__append_10) \
	$(am__append_11) $(am__append_12) $(am__append_13) \
	raptor_serialize_simple.c $(am__append_14) $(am__append_15) \
	$(am__append_16) $(am__append_17) $(am__append_18) \
	$(am__append_19) $(am__append_20) $(am__append_21) \
	$(am__append_22) $(am__append_23) $(am__append_24) \
	$(am__append_25) $(am__append_26)
libraptor_la_LDFLAGS = -version-info 3:0:2 \
 -lm -lexpat $(MEM_LIBS)

libraptor_la_LIBADD = 
EXTRA_DIST = \
raptor-config.in \
raptor_www_test.c \
raptor_nfc_test.c \
raptor_win32.c \
$(man_MANS) \
turtle_lexer.l turtle_parser.y \
n3_lexer.l n3_parser.y \
parsedate.y \
fix-flex fix-bison

all: raptor_config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

raptor_config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/raptor_config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/raptor_config.h
$(srcdir)/raptor_config.h.in: # $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f raptor_config.h stamp-h1
raptor-config: $(top_builddir)/config.status $(srcdir)/raptor-config.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libraptor.la: $(libraptor_la_OBJECTS) $(libraptor_la_DEPENDENCIES) 
	$(libraptor_la_LINK) -rpath $(libdir) $(libraptor_la_OBJECTS) $(libraptor_la_LIBADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(binSCRIPT_INSTALL) '$$d$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	    $(binSCRIPT_INSTALL) "$$d$$p" "$(DESTDIR)$(bindir)/$$f"; \
	  else :; fi; \
	done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

installcheck-binSCRIPTS: $(bin_SCRIPTS)
	bad=0; pid=$$$$; list="$(bin_SCRIPTS)"; for p in $$list; do \
	  case ' $(AM_INSTALLCHECK_STD_OPTIONS_EXEMPT) ' in \
	   *" $$p "* | *" $(srcdir)/$$p "*) continue;; \
	  esac; \
	  f=`echo "$$p" | sed 's,^.*/,,;$(transform)'`; \
	  for opt in --help --version; do \
	    if "$(DESTDIR)$(bindir)/$$f" $$opt >c$${pid}_.out \
	         2>c$${pid}_.err </dev/null \
		 && test -n "`cat c$${pid}_.out`" \
		 && test -z "`cat c$${pid}_.err`"; then :; \
	    else echo "$$f does not support $$opt" 1>&2; bad=1; fi; \
	  done; \
	done; rm -f c$${pid}_.???; exit $$bad

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include $(DEPDIR)/raptor_www_curl.Plo
include $(DEPDIR)/raptor_www_libfetch.Plo
include $(DEPDIR)/raptor_www_libxml.Plo
include ./$(DEPDIR)/curie.Plo
include ./$(DEPDIR)/language.Plo
include ./$(DEPDIR)/n3_lexer.Plo
include ./$(DEPDIR)/n3_parser.Plo
include ./$(DEPDIR)/ntriples_parse.Plo
include ./$(DEPDIR)/parsedate.Plo
include ./$(DEPDIR)/raptor_abbrev.Plo
include ./$(DEPDIR)/raptor_avltree.Plo
include ./$(DEPDIR)/raptor_expat.Plo
include ./$(DEPDIR)/raptor_feature.Plo
include ./$(DEPDIR)/raptor_general.Plo
include ./$(DEPDIR)/raptor_grddl.Plo
include ./$(DEPDIR)/raptor_guess.Plo
include ./$(DEPDIR)/raptor_identifier.Plo
include ./$(DEPDIR)/raptor_iostream.Plo
include ./$(DEPDIR)/raptor_json_writer.Plo
include ./$(DEPDIR)/raptor_librdfa.Plo
include ./$(DEPDIR)/raptor_libxml.Plo
include ./$(DEPDIR)/raptor_locator.Plo
include ./$(DEPDIR)/raptor_memstr.Plo
include ./$(DEPDIR)/raptor_namespace.Plo
include ./$(DEPDIR)/raptor_nfc.Plo
include ./$(DEPDIR)/raptor_nfc_data.Plo
include ./$(DEPDIR)/raptor_parse.Plo
include ./$(DEPDIR)/raptor_qname.Plo
include ./$(DEPDIR)/raptor_rdfxml.Plo
include ./$(DEPDIR)/raptor_rfc2396.Plo
include ./$(DEPDIR)/raptor_rss.Plo
include ./$(DEPDIR)/raptor_rss_common.Plo
include ./$(DEPDIR)/raptor_sax2.Plo
include ./$(DEPDIR)/raptor_sequence.Plo
include ./$(DEPDIR)/raptor_serialize.Plo
include ./$(DEPDIR)/raptor_serialize_dot.Plo
include ./$(DEPDIR)/raptor_serialize_json.Plo
include ./$(DEPDIR)/raptor_serialize_ntriples.Plo
include ./$(DEPDIR)/raptor_serialize_rdfxml.Plo
include ./$(DEPDIR)/raptor_serialize_rdfxmla.Plo
include ./$(DEPDIR)/raptor_serialize_rss.Plo
include ./$(DEPDIR)/raptor_serialize_simple.Plo
include ./$(DEPDIR)/raptor_serialize_turtle.Plo
include ./$(DEPDIR)/raptor_set.Plo
include ./$(DEPDIR)/raptor_statement.Plo
include ./$(DEPDIR)/raptor_stringbuffer.Plo
include ./$(DEPDIR)/raptor_turtle_writer.Plo
include ./$(DEPDIR)/raptor_uri.Plo
include ./$(DEPDIR)/raptor_utf8.Plo
include ./$(DEPDIR)/raptor_www.Plo
include ./$(DEPDIR)/raptor_xml.Plo
include ./$(DEPDIR)/raptor_xml_writer.Plo
include ./$(DEPDIR)/raptor_xsd.Plo
include ./$(DEPDIR)/rdfa.Plo
include ./$(DEPDIR)/rdfa_utils.Plo
include ./$(DEPDIR)/snprintf.Plo
include ./$(DEPDIR)/strcasecmp.Plo
include ./$(DEPDIR)/subject.Plo
include ./$(DEPDIR)/triple.Plo
include ./$(DEPDIR)/turtle_common.Plo
include ./$(DEPDIR)/turtle_lexer.Plo
include ./$(DEPDIR)/turtle_parser.Plo

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

curie.lo: $(top_srcdir)/librdfa/curie.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT curie.lo -MD -MP -MF $(DEPDIR)/curie.Tpo -c -o curie.lo `test -f '$(top_srcdir)/librdfa/curie.c' || echo '$(srcdir)/'`$(top_srcdir)/librdfa/curie.c
	mv -f $(DEPDIR)/curie.Tpo $(DEPDIR)/curie.Plo
#	source='$(top_srcdir)/librdfa/curie.c' object='curie.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o curie.lo `test -f '$(top_srcdir)/librdfa/curie.c' || echo '$(srcdir)/'`$(top_srcdir)/librdfa/curie.c

language.lo: $(top_srcdir)/librdfa/language.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT language.lo -MD -MP -MF $(DEPDIR)/language.Tpo -c -o language.lo `test -f '$(top_srcdir)/librdfa/language.c' || echo '$(srcdir)/'`$(top_srcdir)/librdfa/language.c
	mv -f $(DEPDIR)/language.Tpo $(DEPDIR)/language.Plo
#	source='$(top_srcdir)/librdfa/language.c' object='language.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o language.lo `test -f '$(top_srcdir)/librdfa/language.c' || echo '$(srcdir)/'`$(top_srcdir)/librdfa/language.c

rdfa.lo: $(top_srcdir)/librdfa/rdfa.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rdfa.lo -MD -MP -MF $(DEPDIR)/rdfa.Tpo -c -o rdfa.lo `test -f '$(top_srcdir)/librdfa/rdfa.c' || echo '$(srcdir)/'`$(top_srcdir)/librdfa/rdfa.c
	mv -f $(DEPDIR)/rdfa.Tpo $(DEPDIR)/rdfa.Plo
#	source='$(top_srcdir)/librdfa/rdfa.c' object='rdfa.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rdfa.lo `test -f '$(top_srcdir)/librdfa/rdfa.c' || echo '$(srcdir)/'`$(top_srcdir)/librdfa/rdfa.c

rdfa_utils.lo: $(top_srcdir)/librdfa/rdfa_utils.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rdfa_utils.lo -MD -MP -MF $(DEPDIR)/rdfa_utils.Tpo -c -o rdfa_utils.lo `test -f '$(top_srcdir)/librdfa/rdfa_utils.c' || echo '$(srcdir)/'`$(top_srcdir)/librdfa/rdfa_utils.c
	mv -f $(DEPDIR)/rdfa_utils.Tpo $(DEPDIR)/rdfa_utils.Plo
#	source='$(top_srcdir)/librdfa/rdfa_utils.c' object='rdfa_utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rdfa_utils.lo `test -f '$(top_srcdir)/librdfa/rdfa_utils.c' || echo '$(srcdir)/'`$(top_srcdir)/librdfa/rdfa_utils.c

subject.lo: $(top_srcdir)/librdfa/subject.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT subject.lo -MD -MP -MF $(DEPDIR)/subject.Tpo -c -o subject.lo `test -f '$(top_srcdir)/librdfa/subject.c' || echo '$(srcdir)/'`$(top_srcdir)/librdfa/subject.c
	mv -f $(DEPDIR)/subject.Tpo $(DEPDIR)/subject.Plo
#	source='$(top_srcdir)/librdfa/subject.c' object='subject.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o subject.lo `test -f '$(top_srcdir)/librdfa/subject.c' || echo '$(srcdir)/'`$(top_srcdir)/librdfa/subject.c

triple.lo: $(top_srcdir)/librdfa/triple.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT triple.lo -MD -MP -MF $(DEPDIR)/triple.Tpo -c -o triple.lo `test -f '$(top_srcdir)/librdfa/triple.c' || echo '$(srcdir)/'`$(top_srcdir)/librdfa/triple.c
	mv -f $(DEPDIR)/triple.Tpo $(DEPDIR)/triple.Plo
#	source='$(top_srcdir)/librdfa/triple.c' object='triple.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o triple.lo `test -f '$(top_srcdir)/librdfa/triple.c' || echo '$(srcdir)/'`$(top_srcdir)/librdfa/triple.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-man1: $(man1_MANS) $(man_MANS)
	@$(NORMAL_INSTALL)
	test -z "$(man1dir)" || $(MKDIR_P) "$(DESTDIR)$(man1dir)"
	@list='$(man1_MANS) $(dist_man1_MANS) $(nodist_man1_MANS)'; \
	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
	for i in $$l2; do \
	  case "$$i" in \
	    *.1*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  if test -f $$i; then file=$$i; \
	  else file=$(srcdir)/$$i; fi; \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  case "$$ext" in \
	    1*) ;; \
	    *) ext='1' ;; \
	  esac; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	  $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst"; \
	done
uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list='$(man1_MANS) $(dist_man1_MANS) $(nodist_man1_MANS)'; \
	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
	for i in $$l2; do \
	  case "$$i" in \
	    *.1*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  case "$$ext" in \
	    1*) ;; \
	    *) ext='1' ;; \
	  esac; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " rm -f '$(DESTDIR)$(man1dir)/$$inst'"; \
	  rm -f "$(DESTDIR)$(man1dir)/$$inst"; \
	done
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) raptor_config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) raptor_config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) raptor_config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS) raptor_config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LTLIBRARIES) $(SCRIPTS) $(MANS) $(HEADERS) \
		raptor_config.h
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf $(DEPDIR) ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-includeHEADERS install-man

install-dvi: install-dvi-am

install-exec-am: install-binSCRIPTS install-libLTLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man: install-man1

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am: installcheck-binSCRIPTS

maintainer-clean: maintainer-clean-am
	-rm -rf $(DEPDIR) ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binSCRIPTS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES uninstall-man

uninstall-man: uninstall-man1

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-generic clean-libLTLIBRARIES clean-libtool ctags \
	distclean distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binSCRIPTS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man install-man1 install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installcheck-binSCRIPTS \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binSCRIPTS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES uninstall-man uninstall-man1


# Actually it needs turtle_parser.h but nevermind
#turtle_lexer.c: $(srcdir)/turtle_lexer.l turtle_parser.c $(srcdir)/fix-flex
#	$(LEX) -o$@ $(srcdir)/turtle_lexer.l
#	$(PERL) $(srcdir)/fix-flex $@ > turtle_lexer.t
#	mv turtle_lexer.t $@

#turtle_parser.c: $(srcdir)/turtle_parser.y $(srcdir)/fix-bison
#	$(YACC) -b turtle_parser -p turtle_parser_ -d -v $(srcdir)/turtle_parser.y
#	$(PERL) $(srcdir)/fix-bison turtle_parser.tab.c > $@
#	mv turtle_parser.tab.h turtle_parser.h
#	rm -f turtle_parser.tab.c

# Actually it needs n3_parser.h but nevermind
#n3_lexer.c: $(srcdir)/n3_lexer.l n3_parser.c $(srcdir)/fix-flex
#	$(LEX) -o$@ $(srcdir)/n3_lexer.l
#	$(PERL) $(srcdir)/fix-flex $@ > n3_lexer.t
#	mv n3_lexer.t $@

#n3_parser.c: $(srcdir)/n3_parser.y  $(srcdir)/fix-bison
#	$(YACC) -b n3_parser -p n3_parser_ -d -v $(srcdir)/n3_parser.y
#	$(PERL) $(srcdir)/fix-bison n3_parser.tab.c > $@
#	mv n3_parser.tab.h n3_parser.h
#	rm -f n3_parser.tab.c

# Actually it needs turtle_parser.h but nevermind
turtle_lexer_test: $(srcdir)/turtle_lexer.c libraptor.la
	$(LINK) $(DEFS) $(CPPFLAGS) -I$(srcdir) -I. -DSTANDALONE $(srcdir)/turtle_lexer.c libraptor.la $(LIBS)

turtle_parser_test: $(srcdir)/turtle_parser.c libraptor.la
	$(LINK) $(DEFS) $(CPPFLAGS) -I$(srcdir) -I. -DSTANDALONE $(srcdir)/turtle_parser.c libraptor.la $(LIBS)

#n3_lexer_test: $(srcdir)/n3_lexer.c libraptor.la
#	$(LINK) $(DEFS) $(CPPFLAGS) -I$(srcdir) -I. -DSTANDALONE $(srcdir)/n3_lexer.c libraptor.la $(LIBS)

#n3_parser_test: $(srcdir)/n3_parser.c libraptor.la
#	$(LINK) $(DEFS) $(CPPFLAGS) -I$(srcdir) -I. -DSTANDALONE $(srcdir)/n3_parser.c libraptor.la $(LIBS)

parsedate.c: $(srcdir)/parsedate.y
	$(YACC) -b parsedate -p raptor_parsedate_ -d -v $(srcdir)/parsedate.y
	sed -e '/Suppress GCC warning that yyerrlab1/,/^\#endif/d' -e "s/parsedate.tab.c/$@/" parsedate.tab.c > $@
	mv parsedate.tab.h parsedate.h
	rm -f parsedate.tab.c

# Some people need a little help ;-)
test: check

raptor_parse_test: $(srcdir)/raptor_general.c libraptor.la
	$(LINK) $(DEFS) $(CPPFLAGS) -I$(srcdir) -I. -DSTANDALONE $(srcdir)/raptor_parse.c libraptor.la $(LIBS)

raptor_rfc2396_test: $(srcdir)/raptor_rfc2396.c libraptor.la
	$(LINK) $(DEFS) $(CPPFLAGS) -I$(srcdir) -I. -DSTANDALONE $(srcdir)/raptor_rfc2396.c libraptor.la $(LIBS)

raptor_uri_test: $(srcdir)/raptor_uri.c libraptor.la
	$(LINK) $(DEFS) $(CPPFLAGS) -I$(srcdir) -I. -DSTANDALONE $(srcdir)/raptor_uri.c libraptor.la $(LIBS)

raptor_uri_win32_test: $(srcdir)/raptor_uri.c libraptor.la
	$(LINK) $(DEFS) $(CPPFLAGS) -I$(srcdir) -I. -DSTANDALONE -DWIN32_URI_TEST $(srcdir)/raptor_uri.c libraptor.la $(LIBS)

raptor_namespace_test: $(srcdir)/raptor_namespace.c libraptor.la
	$(LINK) $(DEFS) $(CPPFLAGS) -I$(srcdir) -I. -DSTANDALONE $(srcdir)/raptor_namespace.c libraptor.la $(LIBS)

strcasecmp_test: $(srcdir)/strcasecmp.c libraptor.la
	$(LINK) $(DEFS) $(CPPFLAGS) -I$(srcdir) -I. -DSTANDALONE $(srcdir)/strcasecmp.c libraptor.la $(LIBS)

raptor_www_test: $(srcdir)/raptor_www_test.c libraptor.la
	$(LINK) $(DEFS) $(CPPFLAGS) -I$(srcdir) -I. -DSTANDALONE $(srcdir)/raptor_www_test.c libraptor.la $(LIBS)

raptor_set_test: $(srcdir)/raptor_set.c libraptor.la
	$(LINK) $(DEFS) $(CPPFLAGS) -I$(srcdir) -I. -DSTANDALONE $(srcdir)/raptor_set.c libraptor.la $(LIBS)

raptor_xml_test: $(srcdir)/raptor_xml.c libraptor.la
	$(LINK) $(DEFS) $(CPPFLAGS) -I$(srcdir) -I. -DSTANDALONE $(srcdir)/raptor_xml.c libraptor.la $(LIBS)

raptor_sequence_test: $(srcdir)/raptor_sequence.c libraptor.la
	$(LINK) $(DEFS) $(CPPFLAGS) -I$(srcdir) -I. -DSTANDALONE $(srcdir)/raptor_sequence.c libraptor.la $(LIBS)

raptor_stringbuffer_test: $(srcdir)/raptor_stringbuffer.c libraptor.la
	$(LINK) $(DEFS) $(CPPFLAGS) -I$(srcdir) -I. -DSTANDALONE $(srcdir)/raptor_stringbuffer.c libraptor.la $(LIBS)

raptor_nfc_test: $(srcdir)/raptor_nfc_test.c libraptor.la
	$(LINK) $(DEFS) $(CPPFLAGS) -I$(srcdir) -I. -DSTANDALONE $(srcdir)/raptor_nfc_test.c libraptor.la $(LIBS)

raptor_iostream_test: $(srcdir)/raptor_iostream.c libraptor.la
	$(LINK) $(DEFS) $(CPPFLAGS) -I$(srcdir) -I. -DSTANDALONE $(srcdir)/raptor_iostream.c libraptor.la $(LIBS)

raptor_xml_writer_test: $(srcdir)/raptor_xml_writer.c libraptor.la
	$(LINK) $(DEFS) $(CPPFLAGS) -I$(srcdir) -I. -DSTANDALONE $(srcdir)/raptor_xml_writer.c libraptor.la $(LIBS)

raptor_turtle_writer_test: $(srcdir)/raptor_turtle_writer.c libraptor.la
	$(LINK) $(DEFS) $(CPPFLAGS) -I$(srcdir) -I. -DSTANDALONE $(srcdir)/raptor_turtle_writer.c libraptor.la $(LIBS)

raptor_avltree_test: $(srcdir)/raptor_avltree.c libraptor.la
	$(LINK) $(DEFS) $(CPPFLAGS) -I$(srcdir) -I. -DSTANDALONE $(srcdir)/raptor_avltree.c libraptor.la $(LIBS)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
